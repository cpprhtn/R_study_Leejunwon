plot(corona,distribute)
plot(corona,distribute,type = "l")
plot(corona,distribute,type = "l",ylim = c(0,10000))
par(mfrow=c(2,1)) #화면 나누기
#plot(x축,y축)
plot(corona,distribute,type = "l",ylim = c(0,10000))
par(mfrow=c(1,2)) #화면 나누기
#plot(x축,y축)
plot(corona,distribute,type = "l",ylim = c(0,10000))
par(mfrow=c(2,2)) #화면 나누기
#plot(x축,y축)
plot(corona,distribute,type = "l",ylim = c(0,10000))
par(mfrow=c(1,1)) #화면 나누기
#plot(x축,y축)
plot(corona,distribute,type = "l",ylim = c(0,10000))
#plot(x축,y축)
plot(corona,distribute,type = "l",ylim = c(0,10000),title = "코로나바이러스 증가추세")
#plot(x축,y축)
plot(corona,distribute,type = "l",ylim = c(0,10000),main = "코로나바이러스 증가추세")
#plot(x축,y축)
plot(corona,distribute,type = "l",ylim = c(0,10000),main = "코로나바이러스 증가추세",Encoding("CP949"))
#plot(x축,y축)
plot(corona,distribute,type = "l",ylim = c(0,10000),main = "코로나바이러스 증가추세",Encoding("CP949"))
#plot(x축,y축)
plot(corona,distribute,type = "l",ylim = c(0,10000),main = "corona distribute in korea")
#plot(x축,y축)
plot(corona,distribute,type = "l",ylim = c(0,10000),main = "Corona distribute in korea")
#plot(x축,y축)
plot(corona,distribute,type = "p",ylim = c(0,10000),main = "Corona distribute in korea")
#plot(x축,y축)
plot(corona,distribute,type = "l",ylim = c(0,10000),main = "Corona distribute in korea")
#plot(x축,y축)
plot(corona,distribute,col = "blue",type = "l",ylim = c(0,10000),main = "Corona distribute in korea")
#plot(x축,y축)
plot(corona,distribute,col = "red",type = "l",ylim = c(0,10000),main = "Corona distribute in korea")
fit <- lm(distribute ~ corona)
abline(fit, col="red")
View(fit)
summary(fit)
fit$coefficients[[2]]
View(fit)
corona2 <- corona <- c(1:8)
distribute2 <- c(7382,1261,3736,5766,6767,4812,7755,2337)
par(mfrow=c(1,2)) #화면 나누기
#plot(x축,y축)
plot(corona,distribute,col = "red",type = "l",ylim = c(0,10000),
main = "Corona distribute in korea")
corona2 <- corona <- c(1:8)
distribute2 <- c(7382,1261,3736,5766,6767,4812,7755,2337)
plot(corona2,distribute2,col = "blue",type = "l",ylim = c(0,10000),
main = "Corona distribute in korea")
plot(corona2,distribute2,col = "blue",type = "l",ylim = c(0,10000),
main = "Corona distribute in korea2")
#plot(x축,y축)
plot(corona,distribute,col = "red",type = "l",ylim = c(0,10000),
main = "Corona distribute in korea")
summary(corona2)
fit = lm(distribute2 ~ corona2)
fit2 = lm(distribute2 ~ corona2)
abline(fit2)
summary(fit2)
x <- c(1:10)
y <- x^2-x+10
par(mfrow=c(2,4))
types=c("p","l","o","b","c","s","S","h")
for(i in 1:8){
plot(x,y,type = types[i], col="blue",pch=i)
}
#plot(x축,y축,col = "컬러",type = "line, point, h)
plot(corona,distribute,col = "red",type = "b",ylim = c(0,10000),
main = "Corona distribute in korea")
#plot(x축,y축,col = "컬러",type = "l,p,b,h",
#           xlim = c(x범위), ylim = c(y범위),xlib = "x축 단위", ylib = "y축 단위", main = "그래프 제목")
plot(corona,distribute,col = "red",type = "b",ylim = c(0,10000),
main = "Corona distribute in korea")
fit <- lm(distribute ~ corona) #lm(y ~ x), x,y의 통계적 중앙값
corona <- c(1:8)
distribute <- c(1261,2337,3736,4812,5766,6767,7382,7755)
par(mfrow=c(1,1)) #화면 나누기
#plot(x축,y축,col = "컬러",type = "l,p,b,h",
#           xlim = c(x범위), ylim = c(y범위),xlib = "x축 단위", ylib = "y축 단위", main = "그래프 제목")
plot(corona,distribute,col = "red",type = "b",ylim = c(0,10000),
main = "Corona distribute in korea")
fit <- lm(distribute ~ corona) #lm(y ~ x), x,y의 통계적 중앙값
abline(fit, col="red")
#plot(x축,y축,col = "컬러",type = "l,p,b,h",
#           xlim = c(x범위), ylim = c(y범위),xlib = "x축 단위", ylib = "y축 단위", main = "그래프 제목")
plot(corona,distribute,col = "red",type = "b",ylim = c(0,10000),
main = "Corona distribute in korea",xlib = "date",ylib="infacted")
fit <- lm(distribute ~ corona) #lm(y ~ x), x,y의 통계적 중앙값
par(mfrow=c(1,1)) #화면 나누기
#plot(x축,y축,col = "컬러",type = "l,p,b,h",
#           xlim = c(x범위), ylim = c(y범위),xlib = "x축 단위", ylib = "y축 단위", main = "그래프 제목")
plot(corona,distribute,col = "red",type = "b",ylim = c(0,10000),
main = "Corona distribute in korea",xlib = "date",ylib="infacted")
#plot(x축,y축,col = "컬러",type = "l,p,b,h",
#           xlim = c(x범위), ylim = c(y범위),xlab = "x축 단위", ylab = "y축 단위", main = "그래프 제목")
plot(corona,distribute,col = "red",type = "b",ylim = c(0,10000),
main = "Corona distribute in korea",xlab = "date",ylab="infacted")
abline(fit, col="red") #그래프위에 fit(통계적 중앙값)을 그린다.
#plot(x축,y축,col = "컬러",type = "l,p,b,h",
#           xlim = c(x범위), ylim = c(y범위),xlab = "x축 단위", ylab = "y축 단위", main = "그래프 제목")
plot(corona,distribute,col = "red",type = "b",ylim = c(0,10000),
main = "Corona distribute in korea",xlab = "Date",ylab="Infacted")
distribute <- c(1261,2337,3736,4812,5766,6767,7382,7755,7979,8162,8320,8565,8799,
8961,9137,9332,9583,9786,9976)
length(distribute)
#코로나 바이러스 증가 추세를 그래프로 만들어보고, 분석해 봅시다.
corona <- c(1:19)
plot(corona,distribute)
#개요가 비슷하다.
#그래프에 다양한 정보를 넣어주자.
plot(corona,distribute,col="red",type = "b", ylim = c(0,10000),
main = "Corona distribute in Korea",
xlab = "Date_start 2/26",ylab = "Infacted")
fit <- lm(distribute ~ corona)
abline(fit, col = "blue")
summary(fit)
corona2 <- c(1:19)
#데이터의 순서를 무작위로 섞음
corona2 <- c(1:19)
distribute2 <- c(2337,9137,3736,9976,4812,6767,7382,7755,5766,8162,8320,8565,8799,
8961,1261,9332,9583,9786,7979)
plot(corona2,distribute2,col="green",type = "b", ylim = c(0,10000),
main = "Corona2 distribute in Korea",
xlab = "Date_start 2/26",ylab = "Infacted")
plot(corona2,distribute2,col="purple",type = "b", ylim = c(0,10000),
main = "Corona2 distribute in Korea",
xlab = "Date_start 2/26",ylab = "Infacted")
fit2 <- lm(distribute2 ~ corona2)
abline(fit2)
summary(fit2)
plot(pressure$temperature,pressure$pressure)
pressure
?pressure
plot(pressure$temperature,pressure$pressure)
plot(pressure$temperature,pressure$pressure,type = "l")
points(pressure$temperature,pressure$pressure)
lines(pressure$temperature,pressure$pressure,col = "red")
lines(pressure$temperature,pressure$pressure/2,col = "red")
points(pressure$temperature,pressure$pressure/2,col="red")
plot(pressure$temperature,pressure$pressure,type = "l")
points(pressure$temperature,pressure$pressure)
lines(pressure$temperature,pressure$pressure/2,col = "red")
points(pressure$temperature,pressure$pressure/2,col="red")
library(ggplot2)
qplot(pressure$temperature,pressure$pressure,geom = 'line')
ggplot(pressure,aes(x=temperature, y=pressure))+geom_line()
qplot(pressure$temperature,pressure$pressure,geom = c('line','point'))
ggplot(pressure,aes(x=temperature, y=pressure))+geom_line()+geom_point()
ggplot(pressure,aes(x=temperature/2, y=pressure/2),col="red")+geom_line()+geom_point()
ggplot(pressure,aes(x=temperature, y=pressure))+geom_line()+geom_point()
ggplot(pressure,aes(x=temperature/2, y=pressure/2),col="red")+geom_line()+geom_point()
ggplot(pressure,aes(x=temperature, y=pressure))+geom_line()+geom_point()
ggplot(pressure,aes(x=temperature/2, y=pressure/2),col="red")+geom_line()+geom_point()
ggplot(pressure,aes(x=temperature/2, y=pressure/2))+geom_line()+geom_point()+geom_col("red")
ggplot(pressure,aes(x=temperature/2, y=pressure/2))+geom_line()+geom_point()+geom_col("red")
ggplot(pressure,aes(x=temperature/2, y=pressure/2))+geom_line()+geom_point()+geom_col(red)
ggplot(pressure,aes(x=temperature/2, y=pressure/2))+geom_line()+geom_point()+geom_col('red')
getwd()
setwd("/Users/cpprhtn/Desktop/R_study")
raw_df <- read.csv("unemployment_rate.csv",header = T, fileEncoding = 'CP949')
#한글 내용시 인코딩 필요
raw_df
head(raw_df)
summary(raw_df)
#Reshape
library(tidyr)
library(reshape2)
#Reshape
library(tidyr)
library(reshape2)
library(ggplot2)
df_m <- melt(raw_df, id.var = c("성별","연령계층별"))
head(df_m)
#Cleaning
df_m$year = substr(df_m$variable,2,5)
df_m$month = substr(df_m$variable,8,9)
df_m$year_month = paste(df_m$year, df_m$month, sep = "-")
df_m$year_month = as.Date(paste(df_m$year_month, "-01",sep = ""))
df_select = df_m[,c("성별", "연령계층별", "year_month", "value")]
summary(df_select)
tail(df_select)
#remove NA rows
#df_cleaned = df_select[complete.cases(df_select),]
df_cleaned = df_select
colnames(df_cleaned) = c("sex", "age_group", "year_month", "value")
levels(df_cleaned$sex)[1]="Total"
levels(df_cleaned$sex)[2]="Male"
levels(df_cleaned$sex)[3]="Female"
levels(df_cleaned$age_group)
df_cleaned$new_age_group = gsub("세|이상", "", df_cleaned$age_group)
df_cleaned$new_age_group = gsub("계", "Total", df_cleaned$new_age_group)
#gsub("x","y",col) x라는 철자를 모두 y로 바꾼다
df_final = df_cleaned[,c("sex","new_age_group","year_month","value")]
head(df_final)
df_20s = df_final[which(df_final$new_age_group=="20 - 29"),]
df_30s = df_final[which(df_final$new_age_group=="30 - 39"),]
df_40s = df_final[which(df_final$new_age_group=="40 - 49"),]
df_50s = df_final[which(df_final$new_age_group=="50 - 59"),]
plotF <- function(df, title){
ggplot(df, aes(x=year_month, y=value,group=sex,colour=sex))+
geom_point()+geom_line()+ggtitle(title)
}
plotF(df_20s,"20-29")
plotF(df_30s,"30-39")
plotF(df_40s,"40-49")
plotF(df_50s,"50-59")
ggplot(df_final, aes(x=year_month, y=value, group=sex,colour=sex)) + geom_point() + geom_line()
plotF <- function(df, title){
ggplot(df, aes(x=year_month, y=value,group=sex,colour=sex))+
geom_point()+geom_line()+ggtitle(title)
}
plotF(df_20s,"20-29")
ggplot(pressure,aes(x=temperature/2, y=pressure/2,colours(pressure)))+geom_line()+geom_point()
ggplot(pressure,aes(x=temperature/2, y=pressure/2,colours("red")))+geom_line()+geom_point()
BOD
BOD
barplot(BOD$demand, names.arg = BOD$Time)
table(mtcars$cyl)
barplot(table(mtcars$cyl))
barplot(table(mtcars$cyl),main = "The number of each cyl")
hist(mtcars$mpg)
mtcars$mpg
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 10)
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 10,xlim = c(0,40))
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 10,xlim = c(10,40))
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 10,xlim = c(10,35))
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 1,xlim = c(10,35))
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 3,xlim = c(10,35))
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 8,xlim = c(10,35))
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 11,xlim = c(10,35))
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 10,xlim = c(10,35))
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 13,xlim = c(10,35))
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 7,xlim = c(10,35))
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 10,xlim = c(10,35))
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 7)
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 10,xlim = c(10,35))
barplot(mtcars$cyl)
barplot(mtcars$cyl,names.arg = mtcars)
barplot(mtcars$cyl,names.arg = mtcars$mpg)
barplot(mtcars$cyl,names.arg = mtcars$cyl)
barplot(BOD$demand, names.arg = BOD)
barplot(BOD$demand, names.arg = BOD$Time)
BOD
plot(BOD)
barplot(BOD$demand, names.arg = BOD$Time)
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time")
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",xlab = "Time")
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",xlab = "Time", ylab = "Demand")
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand", ylim = c(0,20))
barplot(mtcars$cyl,names.arg = mtcars$cyl)
table(mtcars$cyl)
?table
mtcars$cyl
BOD
plot(BOD)
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand", ylim = c(0,20))
plot(BOD)
#자료의 갯수는 적으나 퍼져있어, 직관성이 떨어진다.
#막대그래프를 이용해보자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand", ylim = c(0,20))
#자료의 갯수는 적으나 퍼져있어, 직관성이 떨어진다.
#막대그래프를 이용해보자.
barplot(BOD$demand)
#자료의 갯수는 적으나 퍼져있어, 직관성이 떨어진다.
#막대그래프를 이용해보자.
barplot(BOD$demand,names.arg = BOD$Time)
#자료의 갯수는 적으나 퍼져있어, 직관성이 떨어진다.
#막대그래프를 이용해보자.
barplot(BOD$demand)
#자료의 갯수는 적으나 퍼져있어, 직관성이 떨어진다.
#막대그래프를 이용해보자.
barplot(BOD$demand,BOD$Time)
barplot(BOD$demand, names.arg = BOD$Time)
barplot(BOD$demand, BOD$Time,names.arg = BOD$Time)
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand", ylim = c(0,20))
#자료의 갯수는 적으나 퍼져있어, 직관성이 떨어진다.
#막대그래프를 이용해보자.
barplot(BOD$demand)
#자료의 갯수는 적으나 퍼져있어, 직관성이 떨어진다.
#막대그래프를 이용해보자.
barplot(BOD$demand) #y축에는 BOD Time의 name만 가져온다.
barplot(BOD$demand, BOD$Time,names.arg = BOD$Time)
barplot(BOD$demand, names.arg = BOD$Time)
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand", ylim = c(0,20))
barplot(BOD$demand, names.arg = BOD$Time)
#그래프 위쪽에 짤리는부분 커버해주고, 제목도 붙여주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand", ylim = c(0,20))
table(mtcars$cyl) #벡터에 들어있는, 빈도수
mtcars$cyl
barplot(table(mtcars$cyl),main = "The number of each cyl")
barplot(table(mtcars$cyl),main = "The number of each cyl")
hist(mtcars$mpg)
hist(BOD)
hist(BOD)
summary(mtcars)
str(mtcars)
str(BOD)
hist(BOD$demand)
barplot(table(mtcars$cyl),main = "The number of each cyl")
hist(BOD$demand,BOD$Time)
hist(BOD$demand,breaks=10)
hist(BOD$demand,BOD$Time, breaks=10)
hist(BOD$demand,BOD$Time, breaks=10)
barplot(table(mtcars$cyl),main = "The number of each cyl")
barplot(table(mtcars$cyl),main = "The number of each cyl",break=10)
barplot(table(mtcars$cyl),main = "The number of each cyl")
str(BOD)
hist(BOD$demand,BOD$Time, breaks=10)
hist(BOD$demand,BOD$Time)
hist(BOD$demand,BOD$Time,breaks = 5)
hist(mtcars$mpg)
mtcars$mpg
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 10,xlim = c(10,35))
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 10,xlim = c(10,35))
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 10,xlim = c(10,35))
str(BOD)
hist(BOD$demand,BOD$Time,breaks = 5)
hist(mtcars$mpg)
mtcars$mpg
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 10,xlim = c(10,35))
오늘은 barplot와 hist를 배워보도록 하겠습니다.
BOD
plot(BOD)
#앞서 배운 plot와 dotchart로 먼저 나타내봅시다
par(mfrow=c(1,2))
plot(BOD)
dotchart(BOD)
#먼저 plot으로 시각화 해봅시다.
par(mfrow=c(1,1))
plot(BOD)
#자료의 갯수는 적으나 퍼져있어, 직관성이 떨어진다.
#막대그래프를 이용해보자.
barplot(BOD$demand) #y축에는 BOD Time의 name만 가져온다.
barplot(BOD$demand, names.arg = BOD$Time)
BOD$t
BOD$Time
#데이터의 정보를 표시해주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand", ylim = c(0,20))
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20))
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = rainbow(x))
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = rainbow(1,20))
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = rainbow())
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = "black")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = "gray")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = "light gray")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = "light red")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = "light blue")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = "light blue",sub = "wwf")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = "light blue",space = 1.2)
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = "light blue",space = 1)
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = "light blue",space = 0.5)
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = "light blue",space = 0.5,
width = 1.2)
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = "light blue",space = 0.5,
width = 5)
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),col = "light blue",space = 0.3)
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),
col = "light blue",space = 0.3,border = "white")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),
col = "light blue",space = 0.3,border = "red")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),
col = "light blue",border = "red")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),
col = "light blue",border = "white")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),
col = "light blue",border = "dark blue")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),
col = "light blue",border = "blue")
#처음과 비교해보자.
par(mfrow=c(1,3))
#먼저 plot으로 시각화 해봅시다.
plot(BOD)
#자료의 갯수는 적으나 퍼져있어, 직관성이 떨어진다.
#막대그래프를 이용해보자.
barplot(BOD$demand) #그래프에 정보가 부족하다. 채워넣어보자.
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),
col = "light blue",border = "blue")
#처음과 비교해보자.
par(mfrow=c(1,2))
source('~/.active-rstudio-document', echo=TRUE)
#먼저 plot으로 시각화 해봅시다.
plot(BOD)
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),
col = "light blue",border = "blue")
#먼저 plot으로 시각화 해봅시다.
plot(BOD,mian = "Number of demand over time")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),
col = "light blue",border = "blue")
plot(BOD,type="l",col="red",ylim = c(0,20))
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),
col = "light blue",border = "blue")
plot(BOD,type="l",col="red",ylim = c(0,20),main = "Number of demand over time")
#자료의 갯수는 적으나 퍼져있어, 직관성이 떨어진다.
#막대그래프를 이용해보자.
barplot(BOD$demand) #그래프에 정보가 부족하다. 채워넣어보자.
plot(BOD,type="l",col="red",ylim = c(0,20),main = "Number of demand over time")
#정보를 더 채워주자.
barplot(BOD$demand, names.arg = BOD$Time,main = "Number of demand over time",
xlab = "Time", ylab = "Demand",ylim = c(0,20),
col = "light blue",border = "blue")
table(mtcars$cyl) #벡터에 들어있는, 빈도수
mtcars$cyl
4  6  8  <- cyl 종류
11  7 14 <- cyl의 빈도수
barplot(table(mtcars$cyl),main = "The number of each cyl")
str(BOD)
hist(BOD$demand,BOD$Time,breaks = 5)
hist(mtcars$mpg)
barplot(table(mtcars$cyl),main = "The number of each cyl")
barplot(table(mtcars$mpg),main = "The number of each cyl")
hist(BOD$demand,BOD$Time,breaks = 5)
hist(mtcars$mpg)
barplot(table(mtcars$cyl),main = "The number of each cyl")
mtcars
plot(mtcars$cyl)
dotchart(mtcars$cyl)
barplot(mtcars$cyl)
#3개의 자료중 barplot만 사용이 가능한 수준이었다. 이를 먼저 수정해보자.
barplot(mtcars$cyl,names.arg = mtcars$cyl)
#cyl값을 기준으로 하려고 했으나, 불규칙 적이다.
#이를 해결해보자.
table(mtcars$cyl) #벡터에 들어있는, 빈도수
mtcars$cyl
barplot(table(mtcars$cyl),main = "The number of each cyl")
#3개의 자료중 barplot만 사용이 가능한 수준이었다. 이를 먼저 수정해보자.
barplot(mtcars$cyl,names.arg = mtcars$cyl)
hist(mtcars$mpg)
mtcars$mpg
#조금 더 세분화해주자
hist(mtcars$mpg, breaks = 10,xlim = c(10,35))
